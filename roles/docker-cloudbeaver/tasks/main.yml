---
- name: Create DNS Reconds on Cloudflare for this container
  cloudflare_dns:
    account_api_token: "{{ cloudflare.api }}"
    account_email: "{{ cloudflare.email }}"
    proxied: "yes"
    record: "{{ containers.cloudbeaver.subdomain }}"
    solo: "true"
    state: "present"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    zone: "{{ domain }}"
  loop:
    - { type: 'A', value: '{{ ansible_default_ipv4.address }}' }
    - { type: 'AAAA', value: '{{ ansible_default_ipv6.address }}' }

- name: Verify required directories with correct permissions are created
  file:
    recurse: yes
    path: "{{ directories.container_root }}/{{ item }}"
    owner: "root"
    group: "root"
    state: directory
    setype: container_file_t
  loop:
    - "{{ containers.cloudbeaver.subdomain }}"

- name: Verify templated required files with correct permissions are created
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ directories.container_root }}/{{ containers.cloudbeaver.subdomain }}/{{ item }}"
    owner: "root"
    group: "root"
    mode: 0660
  loop: 
    - "cloudbeaver.conf"
    - "data-sources.json"
    - "initial-data.conf"
    - "product.conf"

  # Standup the container in inventory
- name: Start CloudBeaver
  docker_container:
    name: "{{ containers.cloudbeaver.subdomain }}"
    hostname: "{{ containers.cloudbeaver.subdomain }}"
    state: started
    restart_policy: unless-stopped
    image: dalongrong/cloudbeaver
    links: # Prevent container creation and startup until linked containers are running
     - "{{ containers.mariadb.subdomain }}:{{ containers.mariadb.subdomain }}"
    log_driver: "json-file"
    log_options:
      max-size: "12m"
      max-file: "3"
    volumes: # Mount required directories with the container
      - "{{ directories.container_root }}/{{ containers.cloudbeaver.subdomain }}/cloudbeaver.conf:/app/conf/cloudbeaver.conf:z"
      - "{{ directories.container_root }}/{{ containers.cloudbeaver.subdomain }}/initial-data.conf:/app/conf/initial-data.conf:z"
      - "{{ directories.container_root }}/{{ containers.cloudbeaver.subdomain }}/product.conf:/app/conf/product.conf:z"
      - "{{ directories.container_root }}/{{ containers.cloudbeaver.subdomain }}/data-sources.json:/app/workspace/GlobalConfiguration/.dbeaver/data-sources.json:z"
      - "{{ directories.container_root }}/{{ containers.bazarr.subdomain }}/db/bazarr.db:/app/workspace/GlobalConfiguration/db/bazarr.db:z"
      - "{{ directories.container_root }}/{{ containers.bazarr4k.subdomain }}/db/bazarr.db:/app/workspace/GlobalConfiguration/db/bazarr4k.db:z"
      - "{{ directories.container_root }}/{{ containers.emby.subdomain }}/data/library.db:/app/workspace/GlobalConfiguration/db/emby.db:z"
      - "{{ directories.container_root }}/{{ containers.lazylibrarian.subdomain }}/lazylibrarian.db:/app/workspace/GlobalConfiguration/db/lazylibrarian.db:z"
      - "{{ directories.container_root }}/{{ containers.lidarr.subdomain }}/lidarr.db:/app/workspace/GlobalConfiguration/db/lidarr.db:z"
      - "{{ directories.container_root }}/{{ containers.mylar.subdomain }}/mylar/mylar.db:/app/workspace/GlobalConfiguration/db/mylar.db:z"
      - "{{ directories.container_root }}/{{ containers.ombi.subdomain }}/Ombi.db:/app/workspace/GlobalConfiguration/db/ombi.db:z"
      - "{{ directories.container_root }}/{{ containers.ombi4k.subdomain }}/Ombi.db:/app/workspace/GlobalConfiguration/db/ombi4k.db:z"
      - "{{ directories.container_root }}/{{ containers.plex.subdomain.0 }}/Library/Application Support/Plex Media Server/Plug-in Support/Databases/com.plexapp.plugins.library.db:/app/workspace/GlobalConfiguration/db/plex.db:z"
      - "{{ directories.container_root }}/{{ containers.radarr.subdomain }}/radarr.db:/app/workspace/GlobalConfiguration/db/radarr.db:z"
      - "{{ directories.container_root }}/{{ containers.radarr4k.subdomain }}/radarr.db:/app/workspace/GlobalConfiguration/db/radarr4k.db:z"
      - "{{ directories.container_root }}/{{ containers.sonarr.subdomain }}/sonarr.db:/app/workspace/GlobalConfiguration/db/sonarr.db:z"
      - "{{ directories.container_root }}/{{ containers.sonarr4k.subdomain }}/sonarr.db:/app/workspace/GlobalConfiguration/db/sonarr4k.db:z"
      - "{{ directories.container_root }}/{{ containers.tautulli.subdomain }}/tautulli.db:/app/workspace/GlobalConfiguration/db/tautulli.db:z"
    networks_cli_compatible: no
    networks:
      - name: "{{ networks.docker.primary.name }}"
        aliases: "{{ containers.cloudbeaver.subdomain }}"
    purge_networks: yes
    pull: true
    labels:
      ## Watchtower Updates
      com.centurylinklabs.watchtower.enable: "true"
      ## Enable Traefik
      traefik.enable: "true"
      ## HTTP Routers
      traefik.http.routers.cloudbeaver-rtr.entrypoints: "https"
      traefik.http.routers.cloudbeaver-rtr.rule: "Host(`{{ containers.cloudbeaver.subdomain }}.{{ containers.cloudbeaver.tld }}`)"
      traefik.http.routers.cloudbeaver-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.cloudbeaver-rtr.service: "cloudbeaver-svc"
      traefik.http.services.cloudbeaver-svc.loadbalancer.server.port: "{{ containers.cloudbeaver.port | default('80') }}"
      ## Middlewares
      traefik.http.routers.cloudbeaver-rtr.middlewares: "chain-oauth@file"
...
