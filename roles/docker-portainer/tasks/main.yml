---
- name: Create DNS Reconds on Cloudflare for this container
  cloudflare_dns:
    account_api_token: "{{ cloudflare.api }}"
    account_email: "{{ cloudflare.email }}"
    proxied: "yes"
    record: "{{ containers.portainer.subdomain }}"
    solo: "true"
    state: "present"
    type: "CNAME"
    value: "{{ containers.traefik.subdomain }}.{{ domain }}"
    zone: "{{ domain }}"

- name: Verify required directories with correct permissions are created
  file:
    recurse: yes
    path: "{{ directories.container_root }}/{{ containers.portainer.subdomain }}"
    owner: "{{ users.primary.user }}"
    group: "{{ users.primary.group }}"
    state: directory
    setype: container_file_t

- name: Start Portainer
  docker_container:
    name: "{{ containers.portainer.subdomain }}"
    hostname: "{{ containers.portainer.subdomain }}"
    state: started
    privileged: yes
    restart_policy: unless-stopped
    image: portainer/portainer
    log_driver: "json-file"
    log_options:
      max-size: "12m"
      max-file: "3"
    volumes: # Mount required directories with the container
      - "/var/run/docker.sock:/var/run/docker.sock:z"
      - "{{ directories.container_root }}/{{ containers.portainer.subdomain }}:/data:z"
    # # Primary user details
    user: "{{ users.primary.uid }}:{{ users.primary.gid }}"
    env:
      TZ: "{{ timezone }}"
    networks_cli_compatible: no
    networks:
      - name: "{{ containers.portainer.network }}"
        aliases: "{{ containers.portainer.subdomain }}"
    purge_networks: yes
    pull: true
    labels:
      ## Watchtower Updates
      com.centurylinklabs.watchtower.enable: "true"
      ## Enable Traefik
      traefik.enable: "true"
      ## HTTP Routers
      traefik.http.routers.portainer-rtr.entrypoints: "https"
      traefik.http.routers.portainer-rtr.rule: "Host(`{{ containers.portainer.subdomain }}.{{ containers.portainer.tld }}`)"
      traefik.http.routers.portainer-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.portainer-rtr.service: "portainer-svc"
      traefik.http.services.portainer-svc.loadbalancer.server.port: "{{ containers.portainer.port | default('80') }}"
      ## Middlewares
      traefik.http.routers.portainer-rtr.middlewares: "chain-oauth@file"
...
