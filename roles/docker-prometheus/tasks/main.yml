---
- name: Create DNS Reconds on Cloudflare for this container
  cloudflare_dns:
    account_api_token: "{{ cloudflare.api }}"
    account_email: "{{ cloudflare.email }}"
    proxied: "yes"
    record: "{{ containers.prometheus.subdomain }}"
    solo: "true"
    state: "present"
    type: "CNAME"
    value: "{{ containers.traefik.subdomain }}.{{ domain }}"
    zone: "{{ domain }}"

- name: Verify required directories with correct permissions are created
  file:
    recurse: yes
    path: "{{ directories.container_root }}/{{ containers.prometheus.subdomain }}"
    owner: "{{ users.primary.user }}"
    group: "{{ users.primary.group }}"
    state: directory
    setype: container_file_t

- name: Verify required files with correct permissions are created
  template:
    src: "templates/prometheus.yml.j2"
    dest: "{{ directories.container_root }}/{{ containers.prometheus.subdomain }}/prometheus.yml"
    owner: "{{ users.primary.user }}"
    group: "{{ users.primary.group }}"
    mode: 0660

- name: Start Prometheus
  docker_container:
    name: "{{ containers.prometheus.subdomain }}"
    hostname: "{{ containers.prometheus.subdomain }}"
    state: started
    restart_policy: unless-stopped
    image: prom/prometheus
    links:  # Prevent container creation and startup until linked containers are running
    - "{{ containers.cadvisor.subdomain }}:{{ containers.cadvisor.subdomain }}"
    - "{{ containers.node_exporter.subdomain }}:{{ containers.node_exporter.subdomain }}"
    log_driver: "json-file"
    log_options:
      max-size: "12m"
      max-file: "3"
    volumes: # Mount required directories with the container
      - "{{ directories.container_root }}/{{ containers.prometheus.subdomain }}/prometheus.yml:/etc/prometheus/prometheus.yml:z"
    env:
      PUID: "{{ users.primary.uid }}" # Pass proper UID to the container
      PGID: "{{ users.primary.gid }}" # Pass proper GID to the container
      TZ: "{{ timezone }}"
    command: "-config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus"
    networks_cli_compatible: no
    networks:
      - name: "{{ containers.prometheus.network }}"
        aliases: "{{ containers.prometheus.subdomain }}"
    purge_networks: yes
    pull: true
    labels:
      ## Watchtower Updates
      com.centurylinklabs.watchtower.enable: "true"
      ## Enable Traefik
      traefik.enable: "true"
      ## HTTP Routers
      traefik.http.routers.prometheus-rtr.entrypoints: "https"
      traefik.http.routers.prometheus-rtr.rule: "Host(`{{ containers.prometheus.subdomain }}.{{ containers.prometheus.tld }}`)"
      traefik.http.routers.prometheus-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.prometheus-rtr.service: "prometheus-svc"
      traefik.http.services.prometheus-svc.loadbalancer.server.port: "{{ containers.prometheus.port | default('80') }}"
      ## Middlewares
      traefik.http.routers.prometheus-rtr.middlewares: "chain-oauth@file"
...
