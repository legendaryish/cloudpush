---
- name: Verify required directories with correct permissions are created
  file:
    recurse: yes
    path: "{{ directories.container_root }}/{{ item }}"
    owner: "{{ users.primary.user }}"
    group: "{{ users.primary.group }}"
    state: directory
    setype: container_file_t
  loop:
    - "{{ containers.redis.subdomain }}/data"

- name: Verify templated required files with correct permissions are created
  template:
    src: "templates/redis.conf.j2"
    dest: "{{ directories.container_root }}/{{ containers.redis.subdomain }}/redis.conf"
    owner: "{{ users.primary.user }}"
    group: "{{ users.primary.group }}"
    mode: 0660

- name: Start Redis
  docker_container:
    name: "{{ containers.redis.subdomain }}"
    hostname: "{{ containers.redis.subdomain }}"
    state: started
    restart_policy: unless-stopped
    image: redis:alpine
    log_driver: "json-file"
    log_options:
      max-size: "12m"
      max-file: "3"
    volumes: # Mount required directories with the container
      - "{{ directories.container_root }}/{{ containers.redis.subdomain }}/redis.conf:/usr/local/etc/redis/redis.conf:z"
      - "{{ directories.container_root }}/{{ containers.redis.subdomain }}/data:/data:z"
    env:
      PUID: "{{ users.primary.uid }}" # Pass proper UID to the container
      PGID: "{{ users.primary.gid }}" # Pass proper GID to the container
      TZ: "{{ timezone }}"
    networks_cli_compatible: no
    networks:
      - name: "{{ networks.docker.primary.name }}"
        aliases: "{{ containers.redis.subdomain }}"
    purge_networks: yes
    pull: true
    labels:
      ## Watchtower Updates
      com.centurylinklabs.watchtower.enable: "true"
...
